local IconWmo = {}
local wmo_map

function IconWmo.on_weather_api_response_day(std, data, api)
    local index, count = 1, 0
    local timestamp = os.time()

    do
        local is_day = api.current.is_day
        local wmo = api.current.weather_code
        local emoji_code = (((wmo - 0) + (is_day * 100)) * 3) + 1
        std.bus.emit('put_current_icon_wmo', wmo_map:sub(emoji_code, emoji_code + 2))
    end
    
    while index <= #api.hourly.time and count <= 7 do
        if api.hourly.time[index] <= timestamp then
            local is_day = api.hourly.is_day[index]
            local wmo = api.hourly.weather_code[index]
            local emoji_code = (((wmo - 0) + (is_day * 100)) * 3) + 1
            local val = wmo_map:sub(emoji_code, emoji_code + 2)
            local key = string.format('put_%d_1_calendar', index)
            std.bus.emit(key, val)
            count = count + 1
        end
        index = index + 1
    end
end

return IconWmo
